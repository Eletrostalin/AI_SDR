from aiogram import Router
from aiogram.types import Message, ChatMemberUpdated
from aiogram.fsm.context import FSMContext
from classifier import classify_message
from db.db import SessionLocal
from db.db_auth import create_or_get_company_and_user
from dispatcher import dispatch_classification  # –ò–º–ø–æ—Ä—Ç –¥–∏—Å–ø–µ—Ç—á–µ—Ä–∞ —Ü–µ–ø–æ—á–µ–∫
from config import TARGET_CHAT_ID
import logging
from sqlalchemy.orm import Session

from handlers.campaign_handlers import process_campaign_information, confirm_campaign_creation
from handlers.company_handlers import process_company_information, confirm_company_information, \
    process_edit_company_information
from utils.states import BaseState, AddCompanyState, AddCampaignState, EditCompanyState
from utils.utils import extract_text_from_url, process_message, extract_text_from_document

logger = logging.getLogger(__name__)
router = Router()


def setup_handlers(dp):
    dp.include_router(router)


@router.message()
async def handle_message(message: Message, state: FSMContext):
    """
    –û—Å–Ω–æ–≤–Ω–æ–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–æ–æ–±—â–µ–Ω–∏–π, –º–∞—Ä—à—Ä—É—Ç–∏–∑–∏—Ä—É—é—â–∏–π –∏—Ö –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Å–æ—Å—Ç–æ—è–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
    """
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º ID —á–∞—Ç–∞
    if str(message.chat.id) != str(TARGET_CHAT_ID):
        logger.debug(f"–°–æ–æ–±—â–µ–Ω–∏–µ –∏–∑ –Ω–µ–ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º–æ–≥–æ —á–∞—Ç–∞: {message.chat.id}")
        return  # –ò–≥–Ω–æ—Ä–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ

    logger.debug(f"–ü–æ–ª—É—á–µ–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–µ: {message.text if message.text else '–Ω–µ—Ç —Ç–µ–∫—Å—Ç–∞'}")

    # –ò—Å–∫–ª—é—á–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏—è –±–µ–∑ —Ç–µ–∫—Å—Ç–∞ (–Ω–∞–ø—Ä–∏–º–µ—Ä, —Å–∏—Å—Ç–µ–º–Ω—ã–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –∏–ª–∏ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏—è)
    if not message.text:
        logger.debug("–°–æ–æ–±—â–µ–Ω–∏–µ –±–µ–∑ —Ç–µ–∫—Å—Ç–∞ –ø—Ä–æ–ø—É—â–µ–Ω–æ.")
        return

    try:
        # –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        current_state = await state.get_state()
        logger.debug(f"–¢–µ–∫—É—â–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: {current_state}")

        # –õ–æ–≥–∏–∫–∞ –º–∞—Ä—à—Ä—É—Ç–∏–∑–∞—Ü–∏–∏ –ø–æ —Å–æ—Å—Ç–æ—è–Ω–∏—é
        if current_state is None or current_state == BaseState.default.state:
            logger.debug("–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤ –±–∞–∑–æ–≤–æ–º —Å–æ—Å—Ç–æ—è–Ω–∏–∏. –°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç—Å—è –≤ –∫–ª–∞—Å—Å–∏—Ñ–∏–∫–∞—Ç–æ—Ä.")
            try:
                classification = classify_message(message.text)
                logger.debug(f"–†–µ–∑—É–ª—å—Ç–∞—Ç –∫–ª–∞—Å—Å–∏—Ñ–∏–∫–∞—Ü–∏–∏: {classification}")
                await dispatch_classification(classification, message, state)
            except Exception as e:
                logger.error(f"–û—à–∏–±–∫–∞ –≤ –∫–ª–∞—Å—Å–∏—Ñ–∏–∫–∞—Ç–æ—Ä–µ: {e}")
                await message.reply("–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ —Å–æ–æ–±—â–µ–Ω–∏—è. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.")
        elif current_state == AddCompanyState.waiting_for_information.state:
            logger.debug("–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–∏ AddCompanyState:waiting_for_information. –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ.")
            await process_company_information(message, state, bot=message.bot)
        elif current_state == AddCompanyState.waiting_for_confirmation.state:
            logger.debug("–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–∏ AddCompanyState:waiting_for_confirmation. –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ.")
            await confirm_company_information(message, state)
        elif current_state == AddCampaignState.waiting_for_campaign_information.state:
            logger.debug("–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–∏ AddCampaignState:waiting_for_campaign_information. –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ.")
            await process_campaign_information(message, state, bot=message.bot)
        elif current_state == AddCampaignState.waiting_for_confirmation.state:
            logger.debug("–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–∏ AddCampaignState:waiting_for_confirmation. –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ.")
            await confirm_campaign_creation(message, state)
        elif current_state == EditCompanyState.waiting_for_updated_info.state:
            logger.debug("–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–∏ EditCompanyState:waiting_for_updated_info. –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ.")
            await process_edit_company_information(message, state, bot=message.bot)
        else:
            logger.warning(f"–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ: {current_state}")
            await message.reply("–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.")

    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è: {e}")
        await message.reply("–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –≤–∞—à–µ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.")


@router.chat_member()
async def greet_new_user(event: ChatMemberUpdated):
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –Ω–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ —á–∞—Ç.
    """
    if event.new_chat_member.status == "member" and event.old_chat_member.status in {"left", "kicked"}:
        user = event.new_chat_member.user
        user_name = user.full_name or user.username or "–£–≤–∞–∂–∞–µ–º—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å"
        chat_id = event.chat.id

        logger.debug(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user_name} –¥–æ–±–∞–≤–ª–µ–Ω –≤ —á–∞—Ç {chat_id}. –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏ –¥–æ–±–∞–≤–ª—è–µ–º –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö.")

        # –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏ –∫–æ–º–ø–∞–Ω–∏–∏ –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö
        db: Session = SessionLocal()
        try:
            user_record = create_or_get_company_and_user(db, user, chat_id)
            logger.info(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user_name} —Å ID {user.id} –¥–æ–±–∞–≤–ª–µ–Ω –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö.")
        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö: {e}", exc_info=True)
        finally:
            db.close()

        # –û—Ç–ø—Ä–∞–≤–∫–∞ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è
        await event.bot.send_message(
            chat_id=chat_id,
            text=f"üëã –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, {user_name}!\n\n"
            "–Ø –±–æ—Ç, –∫–æ—Ç–æ—Ä—ã–π –ø–æ–º–æ–∂–µ—Ç –≤–∞–º –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∏—Ä–æ–≤–∞—Ç—å —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ä–µ–∫–ª–∞–º–Ω—ã–º–∏ –∫–∞–º–ø–∞–Ω–∏—è–º–∏ –∏ –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏–µ —Å –∫–ª–∏–µ–Ω—Ç–∞–º–∏. "
            "–í–æ—Ç —á—Ç–æ —è –º–æ–≥—É –¥–µ–ª–∞—Ç—å –¥–ª—è –≤–∞—Å:\n\n"
            "üîπ **–†–∞–±–æ—Ç–∞ —Å –∫–æ–º–ø–∞–Ω–∏–µ–π**:\n"
            "   - –î–æ–±–∞–≤–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∫–æ–º–ø–∞–Ω–∏–∏: \"–î–æ–±–∞–≤—å –Ω–æ–≤—É—é –∫–æ–º–ø–∞–Ω–∏—é\"\n"
            "   - –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –¥–∞–Ω–Ω—ã–µ –∫–æ–º–ø–∞–Ω–∏–∏: \"–ü–æ–∫–∞–∂–∏ –¥–∞–Ω–Ω—ã–µ –∫–æ–º–ø–∞–Ω–∏–∏\"\n"
            "   - –ò–∑–º–µ–Ω–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –∫–æ–º–ø–∞–Ω–∏–∏: \"–ò–∑–º–µ–Ω–∏ –¥–∞–Ω–Ω—ã–µ –∫–æ–º–ø–∞–Ω–∏–∏\"\n"
            "   - –£–¥–∞–ª–∏—Ç—å –∫–æ–º–ø–∞–Ω–∏—é: \"–£–¥–∞–ª–∏—Ç—å –∫–æ–º–ø–∞–Ω–∏—é\"\n\n"
            "üîπ **–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∫–∞–º–ø–∞–Ω–∏—è–º–∏**:\n"
            "   - –°–æ–∑–¥–∞—Ç—å –Ω–æ–≤—É—é –∫–∞–º–ø–∞–Ω–∏—é: \"–°–æ–∑–¥–∞–π –Ω–æ–≤—É—é –∫–∞–º–ø–∞–Ω–∏—é\"\n"
            "   - –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Å–ø–∏—Å–æ–∫ –∫–∞–º–ø–∞–Ω–∏–π: \"–ü–æ–∫–∞–∂–∏ –º–Ω–µ –º–æ–∏ –∫–∞–º–ø–∞–Ω–∏–∏\"\n"
            "   - –£–¥–∞–ª–∏—Ç—å –∫–∞–º–ø–∞–Ω–∏—é: \"–£–¥–∞–ª–∏—Ç—å —Ä–µ–∫–ª–∞–º–Ω—É—é –∫–∞–º–ø–∞–Ω–∏—é\"\n\n"
            "üîπ **–†–∞–±–æ—Ç–∞ —Å email-–ª–∏–¥–∞–º–∏**:\n"
            "   - –ó–∞–≥—Ä—É–∑–∏—Ç—å —Ç–∞–±–ª–∏—Ü—É —Å –ª–∏–¥–∞–º–∏: \"–ó–∞–≥—Ä—É–∑–∏—Ç—å —Ç–∞–±–ª–∏—Ü—É –ª–∏–¥–æ–≤\"\n"
            "   - –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Ç–∞–±–ª–∏—Ü—É: \"–ü–æ–∫–∞–∂–∏ —Ç–∞–±–ª–∏—Ü—É –ª–∏–¥–æ–≤\"\n"
            "   - –£–¥–∞–ª–∏—Ç—å —Ç–∞–±–ª–∏—Ü—É: \"–£–¥–∞–ª–∏—Ç—å —Ç–∞–±–ª–∏—Ü—É –ª–∏–¥–æ–≤\"\n"
            "   - –°–µ–≥–º–µ–Ω—Ç–∞—Ü–∏—è –ª–∏–¥–æ–≤ –¥–ª—è —Ç–∞—Ä–≥–µ—Ç–∏–Ω–≥–∞: \"–°–µ–≥–º–µ–Ω—Ç–∏—Ä—É–π –ª–∏–¥–æ–≤\"\n\n"
            "üîπ **–®–∞–±–ª–æ–Ω—ã –∏ –∫–æ–Ω—Ç–µ–Ω—Ç-–ø–ª–∞–Ω—ã**:\n"
            "   - –°–æ–∑–¥–∞—Ç—å —à–∞–±–ª–æ–Ω –ø–∏—Å—å–º–∞: \"–°–æ–∑–¥–∞–π –Ω–æ–≤—ã–π —à–∞–±–ª–æ–Ω\"\n"
            "   - –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å —à–∞–±–ª–æ–Ω—ã: \"–ü–æ–∫–∞–∂–∏ –º–Ω–µ —à–∞–±–ª–æ–Ω—ã\"\n"
            "   - –£–¥–∞–ª–∏—Ç—å —à–∞–±–ª–æ–Ω: \"–£–¥–∞–ª–∏—Ç—å —à–∞–±–ª–æ–Ω\"\n"
            "   - –°–æ–∑–¥–∞—Ç—å –∫–æ–Ω—Ç–µ–Ω—Ç-–ø–ª–∞–Ω: \"–°–æ–∑–¥–∞–π –∫–æ–Ω—Ç–µ–Ω—Ç-–ø–ª–∞–Ω\"\n"
            "   - –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –∫–æ–Ω—Ç–µ–Ω—Ç-–ø–ª–∞–Ω—ã: \"–ü–æ–∫–∞–∂–∏ –∫–æ–Ω—Ç–µ–Ω—Ç-–ø–ª–∞–Ω—ã\"\n\n"
            "üîπ **–†–∞–±–æ—Ç–∞ —Å —á–µ—Ä–Ω–æ–≤–∏–∫–∞–º–∏ –∏ —Ä–∞—Å—Å—ã–ª–∫–∞–º–∏**:\n"
            "   - –°–æ–∑–¥–∞—Ç—å —á–µ—Ä–Ω–æ–≤–∏–∫–∏: \"–°–æ–∑–¥–∞–π —á–µ—Ä–Ω–æ–≤–∏–∫–∏\"\n"
            "   - –û—Ç–ø—Ä–∞–≤–∏—Ç—å –ø–∏—Å—å–º–∞: \"–ó–∞–ø—É—Å—Ç–∏ —Ä–∞—Å—Å—ã–ª–∫—É\"\n"
            "   - –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å —á–µ—Ä–Ω–æ–≤–∏–∫–∏: \"–ü–æ–∫–∞–∂–∏ –º–Ω–µ —á–µ—Ä–Ω–æ–≤–∏–∫–∏\"\n\n"
            "üîπ **–†–∞–±–æ—Ç–∞ —Å –≤—Ö–æ–¥—è—â–∏–º–∏ —Å–æ–æ–±—â–µ–Ω–∏—è–º–∏**:\n"
            "   - –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –≤—Ö–æ–¥—è—â–∏–µ: \"–ü–æ–∫–∞–∂–∏ –≤—Ö–æ–¥—è—â–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è\"\n"
            "   - –°–æ–∑–¥–∞—Ç—å –ª–∏–¥ –∏–∑ –ø–∏—Å—å–º–∞: \"–°–æ–∑–¥–∞–π –ª–∏–¥–∞ –∏–∑ –ø–∏—Å—å–º–∞\"\n"
            "   - –°–æ–∑–¥–∞—Ç—å —á–µ—Ä–Ω–æ–≤–∏–∫ –æ—Ç–≤–µ—Ç–∞: \"–û—Ç–≤–µ—Ç—å –Ω–∞ –≤—Ö–æ–¥—è—â–µ–µ\"\n\n"
            "üìå –ù–∞–ø–∏—à–∏—Ç–µ \"–ü–æ–º–æ—â—å\", —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å —ç—Ç–æ—Ç —Å–ø–∏—Å–æ–∫ –∫–æ–º–∞–Ω–¥ –≤ –ª—é–±–æ–µ –≤—Ä–µ–º—è.\n\n"
            "ü§ñ –ì–æ—Ç–æ–≤ –ø–æ–º–æ—á—å –≤–∞–º –≤ —Ä–∞–±–æ—Ç–µ!"
        )