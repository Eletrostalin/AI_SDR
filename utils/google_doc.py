import gspread
from google.oauth2.service_account import Credentials

from config import CREDENTIALS_FILE, SCOPES, SHEET_NAME, SHEET_ID
from logger import logger
import os
from datetime import datetime

import pandas as pd
from openpyxl.workbook import Workbook
from logger import logger
  # –ó–∞–≥—Ä—É–∑–∏ —Å–≤–æ–π JSON-—Ñ–∞–π–ª —Å –∫–ª—é—á–∞–º–∏


def create_excel_table(data: list, file_name: str = "content_plans.xlsx") -> str:
    """
    –°–æ–∑–¥–∞–µ—Ç Excel-—Ñ–∞–π–ª —Å –ø–µ—Ä–µ–¥–∞–Ω–Ω—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏.

    :param data: –î–≤—É–º–µ—Ä–Ω—ã–π —Å–ø–∏—Å–æ–∫ –¥–∞–Ω–Ω—ã—Ö –¥–ª—è —Ç–∞–±–ª–∏—Ü—ã.
    :param file_name: –ò–º—è —Å–æ–∑–¥–∞–≤–∞–µ–º–æ–≥–æ —Ñ–∞–π–ª–∞.
    :return: –ü—É—Ç—å –∫ —Å–æ–∑–¥–∞–Ω–Ω–æ–º—É —Ñ–∞–π–ª—É.
    """
    # –°–æ–∑–¥–∞–µ–º DataFrame –∏–∑ —Å–ø–∏—Å–∫–∞ –¥–∞–Ω–Ω—ã—Ö
    df = pd.DataFrame(data[1:], columns=data[0])  # –ü–µ—Ä–≤–∞—è —Å—Ç—Ä–æ–∫–∞ ‚Äî –∑–∞–≥–æ–ª–æ–≤–∫–∏

    # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –ø—É—Ç—å –∫ —Ñ–∞–π–ª—É
    directory = "generated_reports"
    os.makedirs(directory, exist_ok=True)
    file_path = os.path.join(directory, f"{datetime.now().strftime('%Y%m%d_%H%M%S')}_{file_name}")

    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤ Excel
    df.to_excel(file_path, index=False)

    return file_path


def create_excel_with_multiple_sheets(data: dict, file_name: str) -> str:
    """
    –°–æ–∑–¥–∞–µ—Ç Excel-—Ñ–∞–π–ª —Å –Ω–µ—Å–∫–æ–ª—å–∫–∏–º–∏ –ª–∏—Å—Ç–∞–º–∏, –∏—Å–ø–æ–ª—å–∑—É—è openpyxl.

    :param data: –°–ª–æ–≤–∞—Ä—å, –≥–¥–µ –∫–ª—é—á ‚Äî –∏–º—è –ª–∏—Å—Ç–∞, –∑–Ω–∞—á–µ–Ω–∏–µ ‚Äî –¥–∞–Ω–Ω—ã–µ –¥–ª—è –ª–∏—Å—Ç–∞ (–≤ —Ñ–æ—Ä–º–∞—Ç–µ —Å–ø–∏—Å–∫–æ–≤).
    :param file_name: –ò–º—è —Ñ–∞–π–ª–∞.
    :return: –ü—É—Ç—å –∫ —Å–æ–∑–¥–∞–Ω–Ω–æ–º—É —Ñ–∞–π–ª—É.
    """
    file_path = os.path.join(os.getcwd(), "uploads", file_name)  # –ü—É—Ç—å –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è —Ñ–∞–π–ª–∞
    os.makedirs(os.path.dirname(file_path), exist_ok=True)  # –£–±–µ–¥–∏—Ç—å—Å—è, —á—Ç–æ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è —Å—É—â–µ—Å—Ç–≤—É–µ—Ç

    try:
        # –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—É—é –∫–Ω–∏–≥—É
        wb = Workbook()

        for i, (sheet_name, sheet_data) in enumerate(data.items()):
            # –ï—Å–ª–∏ —ç—Ç–æ –ø–µ—Ä–≤—ã–π –ª–∏—Å—Ç, –∏—Å–ø–æ–ª—å–∑—É–µ–º –∞–∫—Ç–∏–≤–Ω—ã–π –ª–∏—Å—Ç, –∏–Ω–∞—á–µ —Å–æ–∑–¥–∞–µ–º –Ω–æ–≤—ã–π
            if i == 0:
                ws = wb.active
                ws.title = sheet_name[:31]  # –û–≥—Ä–∞–Ω–∏—á–∏–≤–∞–µ–º –¥–ª–∏–Ω—É –Ω–∞–∑–≤–∞–Ω–∏—è –¥–æ 31 —Å–∏–º–≤–æ–ª–∞
            else:
                ws = wb.create_sheet(title=sheet_name[:31])

            # –î–æ–±–∞–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ –≤ –ª–∏—Å—Ç
            for row in sheet_data:
                ws.append(row)

        # –°–æ—Ö—Ä–∞–Ω—è–µ–º –∫–Ω–∏–≥—É
        wb.save(file_path)
        logger.info(f"Excel-—Ñ–∞–π–ª —Å –Ω–µ—Å–∫–æ–ª—å–∫–∏–º–∏ –ª–∏—Å—Ç–∞–º–∏ —Å–æ–∑–¥–∞–Ω: {file_path}")
        return file_path

    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ Excel-—Ñ–∞–π–ª–∞ —Å –Ω–µ—Å–∫–æ–ª—å–∫–∏–º–∏ –ª–∏—Å—Ç–∞–º–∏: {e}", exc_info=True)
        raise


def connect_to_google_sheets(sheet_id: str, sheet_name: str):
    """–°–æ–∑–¥–∞–µ—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ Google Sheets –¥–ª—è –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–π –∫–æ–º–ø–∞–Ω–∏–∏."""
    if not sheet_id or not sheet_name:
        logger.error("‚ùå –û—à–∏–±–∫–∞: sheet_id –∏–ª–∏ sheet_name –Ω–µ –∑–∞–¥–∞–Ω—ã.")
        raise ValueError("sheet_id –∏ sheet_name –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å —É–∫–∞–∑–∞–Ω—ã.")

    creds = Credentials.from_service_account_file(CREDENTIALS_FILE, scopes=SCOPES)
    client = gspread.authorize(creds)
    sheet = client.open_by_key(sheet_id).worksheet(sheet_name)
    return sheet


def append_drafts_to_sheet(sheet_id: str, sheet_name: str, successful_drafts):
    """
    –î–æ–±–∞–≤–ª—è–µ—Ç —Å–ø–∏—Å–æ–∫ —á–µ—Ä–Ω–æ–≤–∏–∫–æ–≤ –≤ Google –¢–∞–±–ª–∏—Ü—É.

    :param sheet_id: ID Google –¢–∞–±–ª–∏—Ü—ã –∫–æ–º–ø–∞–Ω–∏–∏.
    :param sheet_name: –ò–º—è –ª–∏—Å—Ç–∞ –∫–æ–º–ø–∞–Ω–∏–∏.
    :param successful_drafts: –°–ø–∏—Å–æ–∫ —á–µ—Ä–Ω–æ–≤–∏–∫–æ–≤ (dict).
    """
    if not successful_drafts:
        logger.warning("‚ö†Ô∏è –ù–µ—Ç —É—Å–ø–µ—à–Ω—ã—Ö —á–µ—Ä–Ω–æ–≤–∏–∫–æ–≤ –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –≤ Google –¢–∞–±–ª–∏—Ü—É.")
        return

    if not sheet_id or not sheet_name:
        logger.error("‚ùå –û—à–∏–±–∫–∞: sheet_id –∏–ª–∏ sheet_name –Ω–µ –∑–∞–¥–∞–Ω—ã. –ü—Ä–µ—Ä—ã–≤–∞–Ω–∏–µ –∑–∞–ø–∏—Å–∏ –≤ Google –¢–∞–±–ª–∏—Ü—É.")
        return

    try:
        sheet = connect_to_google_sheets(sheet_id, sheet_name)
        if not sheet:
            logger.error("‚ùå –û—à–∏–±–∫–∞: –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –æ–±—ä–µ–∫—Ç —Ç–∞–±–ª–∏—Ü—ã.")
            return

        logger.info(f"üìã –ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –∫ –∑–∞–ø–∏—Å–∏ {len(successful_drafts)} —á–µ—Ä–Ω–æ–≤–∏–∫–æ–≤ –≤ Google –¢–∞–±–ª–∏—Ü—É ID {sheet_id}, –ª–∏—Å—Ç {sheet_name}...")

        rows = [[
            draft.get("lead_id", "N/A"),   # ‚úÖ ID –õ–∏–¥–∞
            draft.get("email", "N/A"),     # ‚úÖ Email –ø–æ–ª—É—á–∞—Ç–µ–ª—è
            draft.get("subject", "N/A"),   # ‚úÖ –£–Ω–∏–∫–∞–ª—å–Ω–∞—è —Ç–µ–º–∞ –ø–∏—Å—å–º–∞
            draft.get("text", "N/A")       # ‚úÖ –£–Ω–∏–∫–∞–ª—å–Ω—ã–π —Ç–µ–∫—Å—Ç –ø–∏—Å—å–º–∞
        ] for draft in successful_drafts]

        logger.debug(f"üìÑ –î–∞–Ω–Ω—ã–µ –¥–ª—è –∑–∞–ø–∏—Å–∏ –≤ —Ç–∞–±–ª–∏—Ü—É: {rows}")

        sheet.append_rows(rows, value_input_option="RAW")
        logger.info(f"‚úÖ –£—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω–æ {len(rows)} —á–µ—Ä–Ω–æ–≤–∏–∫–æ–≤ –≤ Google –¢–∞–±–ª–∏—Ü—É.")
    except Exception as e:
        logger.error(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø–∏—Å–∏ –≤ Google Sheets: {e}", exc_info=True)